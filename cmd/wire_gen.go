// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/billykore/go-service-tmpl/domain/greet"
	"github.com/billykore/go-service-tmpl/infra/http/handler"
	"github.com/billykore/go-service-tmpl/infra/http/server"
	"github.com/billykore/go-service-tmpl/infra/storage/repo"
	"github.com/billykore/go-service-tmpl/pkg/config"
	"github.com/billykore/go-service-tmpl/pkg/db/sqlite"
	"github.com/billykore/go-service-tmpl/pkg/logger"
	"github.com/billykore/go-service-tmpl/pkg/validation"
	"github.com/labstack/echo/v4"
)

import (
	_ "github.com/billykore/go-service-tmpl/cmd/swagger/docs"
	_ "github.com/joho/godotenv/autoload"
)

// Injectors from wire.go:

func initApp(cfg *config.Config) *app {
	loggerLogger := logger.New()
	echoEcho := echo.New()
	validator := validation.New()
	db := postgres.New(cfg)
	greetRepo := repo.NewGreetRepo(db)
	service := greet.NewService(loggerLogger, greetRepo)
	greetHandler := handler.NewGreetHandler(validator, service)
	router := server.NewRouter(cfg, loggerLogger, echoEcho, greetHandler)
	serverServer := server.New(router)
	mainApp := newApp(serverServer)
	return mainApp
}
